// 

const { Telegraf, Markup } = require('telegraf');
require('dotenv').config();

// –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —É–∂–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –æ–±—ä–µ–∫—Ç `bot`
const { bot } = require('./webhookHandler');

const BOT_TOKEN = process.env.BOT_TOKEN;
if (!BOT_TOKEN) {
    console.error("–û—à–∏–±–∫–∞: BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è!");
    process.exit(1);
}

console.log("Bot initialized successfully");

const {
    greetingHandler,
    catalogHandler,
    datesPriceHandler,
    faqHandler
} = require('./greeting');

const {
    enterHandler,
    paymentTermsHandler,
    infoHandler,
    bookingHandler,
    datesHandler,
    faqHandler2
} = require('./booking');

const { 
    excurses, 
    tours 
} = require('./catalog');

const connectDB = require('./database');  // –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –±–∞–∑—ã
const User = require('./userModel');  // –ò–º–ø–æ—Ä—Ç –º–æ–¥–µ–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è

// –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
connectDB(); 

(async () => {
    let client;
    try {
        client = await connectDB();
        console.log('–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ.');

        const db = client.db("sample_mflix");
        const users = await db.collection("users").find({}).toArray();
        console.log("–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏:", users);

    } catch (error) {
        console.error('–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö:', error.message);
        process.exit(1);
    } finally {
        if (client) {
            await client.close();
            console.log("–°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å MongoDB –∑–∞–∫—Ä—ã—Ç–æ.");
        }
    }
})();

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–Ω–æ–ø–æ–∫ –∏ —Å—Ç–∞—Ä—Ç
bot.start(greetingHandler);

bot.hears(['üîô –ù–∞–∑–∞–¥', 'üìÖ –í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é'], greetingHandler);
bot.hears('üìö –ö–∞—Ç–∞–ª–æ–≥ –∏ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ', catalogHandler);
bot.hears('üóì –î–∞—Ç—ã –∏ —Ü–µ–Ω—ã', datesPriceHandler);
bot.hears('üí¨ –ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã', faqHandler);
bot.hears('üåü –≠–∫—Å–∫—É—Ä—Å–∏–∏ –Ω–∞ 1 –¥–µ–Ω—å', excurses);
bot.hears('‚ú® –ú–Ω–æ–≥–æ–¥–Ω–µ–≤–Ω—ã–µ —Ç—É—Ä—ã', tours);
bot.hears('‚¨Ö –ù–∞–∑–∞–¥', enterHandler);
bot.hears('üí∞ –£—Å–ª–æ–≤–∏—è –æ–ø–ª–∞—Ç—ã –∏ –±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ', paymentTermsHandler);
bot.hears('üìå –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç—É—Ä–µ', infoHandler);
bot.hears('üñã –î–∞—Ç—ã —Ç—É—Ä–æ–≤', datesHandler);
bot.hears('üí∞ –ó–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞—Ç—å', bookingHandler);
bot.hears('‚ùì –ß–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–º—ã–µ –≤–æ–ø—Ä–æ—Å—ã', faqHandler2);

bot.action('tour', enterHandler);

// –ú–µ–Ω—é –∫–æ–º–∞–Ω–¥
bot.telegram.setMyCommands([
    { command: 'start', description: 'üè†Ô∏é –í –Ω–∞—á–∞–ª–æ' },
    { command: 'catalog', description: 'üìö –ö–∞—Ç–∞–ª–æ–≥' },
    { command: 'faq', description: '‚ùì –ß–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã' }
]);

bot.command('start', (ctx) => {
    greetingHandler(ctx);
});

bot.command('catalog', (ctx) => {
    catalogHandler(ctx);
});

bot.command('faq', (ctx) => {
    faqHandler(ctx);
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏–π
bot.on('text', async (ctx) => {
    try {
        const text = ctx.message.text.trim().toLowerCase();
        console.log('–ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ:', text);
        
        if (/–ø—Ä–∏–≤–µ—Ç/i.test(text) || /–∑–¥—Ä–∞–≤—Å—Ç–≤—É–π/i.test(text) || /–º–µ–Ω—é/i.test(text)) {
            await greetingHandler(ctx);}
        else if (/–¥–∞—Ç/i.test(text) || /—Ü–µ–Ω/i.test(text)) {
            await datesPriceHandler(ctx);}
        else if (/–∫–∞—Ç–∞–ª–æ–≥/i.test(text) || /—Ç—É—Ä/i.test(text)) {
            await catalogHandler(ctx);}
        else if (/–≤–æ–ø—Ä–æ—Å/i.test(text) || /—Å–ø—Ä–æ—Å–∏—Ç—å/i.test(text)) {
            await faqHandler(ctx);}
        else {
            await ctx.reply('–í–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–æ!\n –ú—ã —É–∂–µ –∑–∞–Ω–∏–º–∞–µ–º—Å—è –≤–∞—à–∏–º –∑–∞–ø—Ä–æ—Å–æ–º –∏ —Å–∫–æ—Ä–æ —Å–≤—è–∂–µ–º—Å—è —Å –≤–∞–º–∏.üòä\n\n–ü–æ–∫–∞ –≤—ã –º–æ–∂–µ—Ç–µ –≤—ã–±—Ä–∞—Ç—å –æ–¥–∏–Ω –∏–∑ –≤–∞—Ä–∏–∞–Ω—Ç–æ–≤ –≤ –º–µ–Ω—é –Ω–∏–∂–µ –∏–ª–∏ –¥–æ–∂–¥–∞—Ç—å—Å—è –æ—Ç–≤–µ—Ç–∞ –æ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞.');
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è:', error);
    }
});

bot.telegram.getMe().then(botInfo => {
    console.log("–ë–æ—Ç –ø–æ–¥–∫–ª—é—á–∏–ª—Å—è! –ò–º—è:", botInfo.username);
}).catch(err => {
    console.error("–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Telegram:", err);
});